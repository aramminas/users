{"version":3,"sources":["components/Layout/Header.js","components/Layout/Footer.js","hoc/layout/Layout.js","Firebase/Firebase.js","Firebase/FirebaseFunctions.js","components/Users/UsersListTable.js","components/Users/DeleteUserModal.js","components/Users/EditForm.js","components/Users/UserEdit.js","components/Users/UsersListCard.js","components/Welcome.js","constants.js"],"names":["classes","title","flexGrow","Header","lang","this","props","className","AppBar","position","Toolbar","ContactsTwoTone","Typography","variant","style","users","IconButton","color","AccountCircle","Component","root","width","borderRadius","Footer","handleChange","event","newValue","setState","state","value","BottomNavigation","onChange","BottomNavigationAction","label","company","icon","Business","phone","PhoneIphone","addres","LocationOn","Layout","ChildComponent","rest","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FB","app","initializeApp","database","getUsersData","Promise","resolve","reject","Firebase","ref","once","then","snapshot","results","val","length","Object","keys","message","catch","error","setUsersData","data","set","processData","processArray","filter","el","undefined","result","FirebaseFunctions","removeUser","id","child","remove","updateData","table","update","addNewData","UsersListTable","handleAddNewUserData","index","userAddData","login","node_id","avatar_url","gravatar_id","url","html_url","followers_url","following_url","gists_url","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","type","site_admin","error_add_new_data","error_edit_empty_data","handleEditUserData","error_edit_data","handleDeleteUser","columns","name","field","change_type","lookup","admin","user","organization","configs","onRowAdd","newData","setTimeout","refreshData","prevState","push","toast","success","success_edit_data","onRowUpdate","oldData","indexOf","onRowDelete","splice","success_user_deleted","users_list","editable","Transition","React","forwardRef","Slide","direction","DeleteUserModal","open","handleClose","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","delete_user","DialogContent","DialogContentText","delete_user_question","DialogActions","Button","onClick","size","cancel","delete","margin","formControl","minWidth","w100","EditForm","userData","editBtn","target","preventDefault","editUserData","handleCancelEditUser","autoComplete","onSubmit","Grid","container","justify","alignItems","spacing","item","xs","FormControl","fullWidth","InputLabel","htmlFor","Input","startAdornment","InputAdornment","Fingerprint","Ballot","disabled","Select","labelId","MenuItem","none","startIcon","BackspaceOutlined","CancelOutlined","back","Edit","edit","UserEdit","animationIn","animationOut","animationInDuration","animationOutDuration","isVisible","edit_profile","src","alt","button","fontWeight","paddingLR","padding","UsersListCard","getRate","Math","floor","random","getDuration","handleClickOpen","userId","userIndex","modalState","handleOpenEditUser","editUserDate","handleEditUser","limit","offset","temp","amount","previousUsers","start","finish","difference","nextUsers","check","usersListJsx","map","key","lg","md","sm","personal_data","about","Star","fontSize","StarHalf","StarBorder","DeleteForever","editUser","edit_user","aria-label","component","ArrowLeftRounded","ArrowRightRounded","apiUrl","usersUrl","paper","textAlign","Welcome","getUserDataFromMainApi","restore","axios","get","res","status","statusText","success_firebase_added","error_server_unavailable","getUserDataFromFirebase","checked","tableType","restoreData","welcome_users_page","Paper","height","wait_loader","FormControlLabel","control","Switch","card","RotateLeft","restore_default_data"],"mappings":"utDAIMA,EAAU,CACZC,MAAO,CACHC,SAAU,IA6BHC,E,uKAvBD,IACCC,EAAQC,KAAKC,MAAbF,KAEP,OACI,yBAAKG,UAAW,UACZ,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,MADJ,OAEI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAOd,EAAQC,OACnCG,EAAKW,OAEV,6BACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,WACd,kBAACC,EAAA,EAAD,e,GAfXC,a,6CCNfnB,EAAU,CACZoB,KAAM,CACFC,MAAO,IACPC,aAAc,IAkCPC,E,kDA5BX,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IAIVkB,aAAe,SAACC,EAAOC,GACnB,EAAKC,UAAS,WACV,OAAO,2BAAI,EAAKC,OAAhB,IAAuBC,MAAOH,QALlC,EAAKE,MAAQ,CAACC,MAAO,IAFN,E,qDAWT,IACCzB,EAAQC,KAAKC,MAAbF,KAEP,OACI,4BAAQG,UAAW,eACf,yBAAKA,UAAW,kBACZ,kBAACuB,EAAA,EAAD,CAAkBD,MAAOxB,KAAKuB,MAAMC,MAAOE,SAAU1B,KAAKmB,aAAcV,MAAOd,EAAQoB,MACnF,kBAACY,EAAA,EAAD,CAAwBC,MAAM,UAAUJ,MAAOzB,EAAK8B,QAASC,KAAM,kBAACC,EAAA,EAAD,QACnE,kBAACJ,EAAA,EAAD,CAAwBC,MAAM,QAAQJ,MAAOzB,EAAKiC,MAAOF,KAAM,kBAACG,EAAA,EAAD,QAC/D,kBAACN,EAAA,EAAD,CAAwBC,MAAM,UAAUJ,MAAOzB,EAAKmC,OAAQJ,KAAM,kBAACK,EAAA,EAAD,e,GAtBrErB,a,SCYNsB,EAhBA,SAACC,GAAD,8KAEG,IACKC,EADN,iBACctC,KAAKC,OACxB,OACI,oCACI,kBAAC,EAAD,CAAQF,KAAMA,IACd,kBAACsC,EACOC,GAER,kBAAC,EAAD,CAAQvC,KAAMA,SAVnB,GACiBe,c,oCCL1ByB,G,OAAiB,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CAYIC,EAFN,IANL,aAAe,oBACXC,IAAIC,cAAcV,GAClBvC,KAAKkD,SAAWF,IAAIE,YCbtBC,EAAe,WACjB,OAAO,IAAIC,SAAQ,SAASC,EAASC,GACjCC,EAASL,SAASM,IAAlB,SAA+BC,KAAK,SAASC,MAAK,SAASC,GACvD,IAAMC,EAAUD,EAASE,OAAS,GACZ,IAAnBD,EAAQE,OACPT,EAAQO,GAC6B,IAAhCG,OAAOC,KAAKJ,GAASE,QAC1BR,EAAO,CAACW,QAAS,0DAEtBC,OAAM,SAAAC,GACLb,EAAO,CAACW,QAAQ,wCAAD,OAA0CE,EAAMF,kBAMrEG,EAAe,SAACC,GAClB,OAAO,IAAIjB,SAAQ,SAASC,EAASC,GACjCC,EAASL,SAASM,IAAlB,UAAgCc,IAAhC,eACOD,IACL,SAASF,GACHA,EACAb,EAAO,CAACW,QAAQ,qCAAD,OAAuCE,EAAMF,WAE5DZ,EAAQ,CAACY,SAAS,OAEvBC,OAAM,SAAAC,GACLb,EAAO,CAACW,QAAQ,qCAAD,OAAuCE,EAAMF,kBAyDlEM,EAAc,WAChB,OAAO,IAAInB,SAAQ,SAASC,EAASC,GACjCH,IAAeO,MAAK,SAAAW,GAChB,IAAMG,EAAeH,EAAKI,QAAO,SAAUC,GACvC,YAAcC,IAAPD,KAEXN,EAAaI,GAAcd,MAAK,SAAAW,GACzBA,EAAKJ,QACJZ,EAAQ,CAACuB,QAAQ,IAEjBtB,EAAO,CAACW,QAAQ,kDAErBC,OAAM,SAAAC,GACLb,EAAOa,SAEZD,OAAM,SAAAC,GACLb,EAAOa,UAaJU,EARW,CACtB1B,eACAiB,eACAU,WA3Ee,SAACC,GAChB,OAAO,IAAI3B,SAAQ,SAASC,EAASC,GACjCC,EAASL,SAASM,IAAlB,UAAgCwB,MAAMD,GAAIE,SAASvB,MAAK,WACpDa,IAAcb,MAAK,SAAAW,GACZA,EAAKO,OACJvB,EAAQ,CAACuB,QAAQ,IAEjBtB,EAAO,CAACW,QAAQ,kDAErBC,OAAM,SAAAC,GACLb,EAAOa,SAEZD,OAAM,SAAAC,GACLb,EAAOa,UA+Dfe,WAzDe,SAACC,EAAOJ,EAAIV,GAC3B,OAAO,IAAIjB,SAAQ,SAASC,EAASC,GACjCC,EAASL,SAASM,IAAI2B,GAAOH,MAAMD,GAAIK,OAAOf,GAAK,SAAUF,GACtDA,EACCb,EAAO,CAACW,QAAQ,oBAAD,OAAsBkB,EAAtB,mBAAsChB,EAAMF,WAE3DZ,EAAQ,CAACY,SAAS,OAEvBC,OAAM,SAAAC,GACLb,EAAO,CAACW,QAAQ,oBAAD,OAAsBkB,EAAtB,mBAAsChB,EAAMF,kBAiDnEoB,WA3Ce,SAACF,EAAOJ,EAAIV,GAC3B,OAAO,IAAIjB,SAAQ,SAASC,EAASC,GACjCC,EAASL,SAASM,IAAlB,UAAyB2B,EAAzB,YAAkCJ,IAAMT,IAAxC,eACOD,IACL,SAASF,GACHA,EACAb,EAAO,CAACW,QAAQ,oBAAD,OAAsBkB,EAAtB,uBAA0ChB,EAAMF,WAE/DZ,EAAQ,CAACY,SAAS,OAEvBC,OAAM,SAAAC,GACLb,EAAO,CAACW,QAAQ,oBAAD,OAAsBkB,EAAtB,mBAAsChB,EAAMF,mBCiHxDqB,E,kDA3LX,WAAYrF,GAAQ,IAAD,8BACf,cAAMA,IAuBVsF,qBAAuB,SAACC,EAAOnB,GAAU,IAC9BtE,EAAQ,EAAKE,MAAbF,KACD0F,EAAc,CAChBC,MAAO,GACPX,GAAI,EACJY,QAAS,eACTC,WAAY,GACZC,YAAa,GACbC,IAAK,GACLC,SAAU,GACVC,cAAe,GACfC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,kBAAmB,GACnBC,kBAAmB,GACnBC,UAAW,GACXC,WAAY,GACZC,oBAAqB,GACrBC,KAAM,OACNC,YAAY,GAEhB,OAAO,IAAItD,SAAQ,SAASC,EAASC,GAC7Be,EAAKqB,OAAUrB,EAAKsB,SAAYtB,EAAKoC,MAGrChB,EAAYV,GAAKS,EACjBC,EAAYC,MAAQrB,EAAKqB,MACzBD,EAAYE,QAAUtB,EAAKsB,QAC3BF,EAAYgB,KAAOpC,EAAKoC,KACxB5B,EAAkBQ,WAAW,QAASG,EAAOC,GAAa/B,MAAK,SAAAW,GACxDA,EAAKJ,QACJZ,EAAQ,CAACuB,QAAQ,IAEjBtB,EAAO,CAACW,QAASlE,EAAK4G,wBAE3BzC,OAAM,SAAAC,GACLb,EAAO,CAACW,QAASE,EAAMF,cAb3BX,EAAO,CAACW,QAASlE,EAAK6G,4BAhDf,EAmEnBC,mBAAqB,SAACrB,EAAOnB,GAAU,IAC5BtE,EAAQ,EAAKE,MAAbF,KACP,OAAO,IAAIqD,SAAQ,SAASC,EAASC,GAC7Be,EAAKqB,OAAUrB,EAAKsB,SAAYtB,EAAKoC,KAGrC5B,EAAkBK,WAAW,QAASM,EAAOnB,GAAOX,MAAK,SAAAW,GAClDA,EAAKJ,QACJZ,EAAQ,CAACuB,QAAQ,IAEjBtB,EAAO,CAACW,QAASlE,EAAK+G,qBAE3B5C,OAAM,SAAAC,GACLb,EAAO,CAACW,QAASE,EAAMF,aAT3BX,EAAO,CAACW,QAASlE,EAAK6G,4BAvEf,EAsFnBG,iBAAmB,SAACvB,GAChB,OAAO,IAAIpC,SAAQ,SAASC,EAASC,GACjCuB,EAAkBC,WAAWU,GAAO9B,MAAK,SAAAW,GAClCA,EAAKO,QACJvB,EAAQ,CAACuB,QAAQ,OAEtBV,OAAM,SAAAC,GACLb,EAAOa,UA1Ff,EAAK5C,MAAQ,CACTb,MAAO,CACHsG,QAAS,CACL,CAACpH,MAAO,EAAKK,MAAMF,KAAKkH,KAAMC,MAAO,SACrC,CAACtH,MAAO,EAAKK,MAAMF,KAAK4F,QAASuB,MAAO,WACxC,CAACtH,MAAO,EAAKK,MAAMF,KAAK0G,KAAMS,MAAO,QACrC,CACItH,MAAO,EAAKK,MAAMF,KAAKoH,YACvBD,MAAO,OACPE,OAAQ,CACJ,MAAS,EAAKnH,MAAMF,KAAKsH,MACzB,KAAQ,EAAKpH,MAAMF,KAAKuH,KACxB,aAAgB,EAAKrH,MAAMF,KAAKwH,gBAI5ClD,KAAK,YAAK,EAAKpE,MAAMS,SAnBd,E,qDAkGT,IAAD,OACEX,EAAQC,KAAKC,MAAbF,KAEDyH,EACF,CACIC,SAAU,SAACC,GAAD,OACN,IAAItE,SAAQ,SAACC,EAASC,GAClBqE,YAAW,WACP,IAAMnC,EAAQ,EAAKjE,MAAMb,MAAM2D,KAAKP,OACpC,EAAKyB,qBAAqBC,EAAOkC,GAAShE,MAAK,SAAAW,GACxCA,EAAKO,SACJvB,IACA,EAAKpD,MAAM2H,cACX,EAAKtG,UAAS,SAACuG,GACX,IAAMxD,EAAI,YAAOwD,EAAUnH,MAAM2D,MAEjC,OADAA,EAAKyD,KAAKJ,GACH,2BAAIG,GAAX,IAAsBnH,MAAM,2BACjBmH,EAAUnH,OADM,IACC2D,cAGhC0D,IAAMC,QAAQjI,EAAKkI,uBAExB/D,OAAM,SAAAC,GACLb,IACAyE,IAAM5D,MAAMA,EAAMF,cAEvB,SAEXiE,YAAa,SAACR,EAASS,GAAV,OACT,IAAI/E,SAAQ,SAACC,EAASC,GAClBqE,YAAW,WACP,IAAMnC,EAAQ,EAAKjE,MAAMb,MAAM2D,KAAK+D,QAAQD,GAC5C,EAAKtB,mBAAmBrB,EAAOkC,GAAShE,MAAK,SAAAW,GACtCA,EAAKO,SACJvB,IACA,EAAKpD,MAAM2H,cACPO,GACA,EAAK7G,UAAS,SAACuG,GACX,IAAMxD,EAAI,YAAOwD,EAAUnH,MAAM2D,MAEjC,OADAA,EAAKA,EAAK+D,QAAQD,IAAYT,EACvB,2BAAIG,GAAX,IAAsBnH,MAAM,2BACjBmH,EAAUnH,OADM,IACC2D,cAIpC0D,IAAMC,QAAQjI,EAAKkI,uBAExB/D,OAAM,SAAAC,GACLb,IACAyE,IAAM5D,MAAMA,EAAMF,cAEvB,SAEXoE,YAAa,SAACF,GAAD,OACT,IAAI/E,SAAQ,SAACC,EAASC,GAClBqE,YAAW,WACP,IAAMnC,EAAQ,EAAKjE,MAAMb,MAAM2D,KAAK+D,QAAQD,GAC5C,EAAKpB,iBAAiBvB,GAAO9B,MAAK,SAAAW,GAC3BA,EAAKO,SACJvB,IACA,EAAKpD,MAAM2H,cACX,EAAKtG,UAAS,SAACuG,GACX,IAAMxD,EAAI,YAAOwD,EAAUnH,MAAM2D,MAEjC,OADAA,EAAKiE,OAAOjE,EAAK+D,QAAQD,GAAU,GAC5B,2BAAIN,GAAX,IAAsBnH,MAAM,2BACjBmH,EAAUnH,OADM,IACC2D,cAGhC0D,IAAMC,QAAQjI,EAAKwI,0BAExBrE,OAAM,SAAAC,GACLb,IACAyE,IAAM5D,MAAMA,EAAMF,cAEvB,UAInB,OACI,kBAAC,IAAD,CACIrE,MAAOG,EAAKyI,WACZxB,QAAShH,KAAKuB,MAAMb,MAAMsG,QAC1B3C,KAAMrE,KAAKuB,MAAMb,MAAM2D,KACvBoE,SAAUjB,Q,GAvLG1G,a,+HCFvB4H,GAAaC,IAAMC,YAAW,SAAoB3I,EAAOuD,GAC3D,OAAO,kBAACqF,GAAA,EAAD,eAAOC,UAAU,KAAKtF,IAAKA,GAASvD,OAsChC8I,G,uKAjCD,IAAD,EACgD/I,KAAKC,MAAlDF,EADH,EACGA,KAAMiJ,EADT,EACSA,KAAMC,EADf,EACeA,YAAalC,EAD5B,EAC4BA,iBAEjC,OACI,6BACI,kBAACmC,GAAA,EAAD,CACIF,KAAMA,EACNG,oBAAqBT,GACrBU,aAAW,EACXC,QAASJ,EACTK,kBAAgB,2BAChBC,mBAAiB,kCAEjB,kBAACC,GAAA,EAAD,CAAazE,GAAG,4BAA4BhF,EAAK0J,aACjD,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5E,GAAG,kCACjBhF,EAAK6J,uBAGd,kBAACC,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAASd,EAAazI,QAAQ,WAAWwJ,KAAK,SACjDjK,EAAKkK,QAEV,kBAACH,EAAA,EAAD,CAAQC,QAAShD,EAAkBvG,QAAQ,WAAWI,MAAM,YAAYoJ,KAAK,SACxEjK,EAAKmK,e,GA1BJpJ,a,oGCHxBnB,GAAU,CACZoB,KAAM,CACFC,MAAO,IACP,sBAAuB,CACnBmJ,OAAQ,EACRnJ,MAAO,SAGfoJ,YAAa,CACTD,OAAQ,EACRE,SAAU,KAEdF,OAAQ,CACJA,OAAQ,GAEZG,KAAM,CACFtJ,MAAO,SA4IAuJ,G,4MAtIXhJ,MAAQ,CACJiJ,SAAS,eAAK,EAAKvK,MAAMoE,MACzBoG,SAAS,G,EAGbtJ,aAAe,SAACC,GACZ,IAAM6F,EAAO7F,EAAMsJ,OAAOzD,KACpBzF,EAAQJ,EAAMsJ,OAAOlJ,MAE3B,OAAOyF,GACH,IAAK,QACD,EAAK3F,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IAAsB2C,SAAS,2BAAK,EAAKjJ,MAAMiJ,UAAjB,IAA2B9E,MAAOlE,SAEpE,MACJ,IAAK,UACD,EAAKF,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IAAsB2C,SAAS,2BAAK,EAAKjJ,MAAMiJ,UAAjB,IAA2B7E,QAASnE,SAEtE,MACJ,IAAK,OACD,EAAKF,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IAAsB2C,SAAS,2BAAK,EAAKjJ,MAAMiJ,UAAjB,IAA2B/D,KAAMjF,SAEnE,MACJ,QACI,EAAKF,UAAS,SAACuG,GACX,OAAO,eAAIA,Q,EAK3BhB,mBAAqB,SAACzF,GAClBA,EAAMuJ,iBACN,EAAKrJ,UAAS,SAAAuG,GAAS,kCAASA,GAAT,IAAoB4C,SAAS,OACpD,EAAKxK,MAAM2K,aAAa,EAAKrJ,MAAMiJ,W,uDAG7B,IAAD,EACgCxK,KAAKC,MAAnCF,EADF,EACEA,KAAM8K,EADR,EACQA,qBAEb,OACI,0BAAMpK,MAAOd,GAAQoB,KAAM+J,aAAa,MAAMC,SAAU/K,KAAK6G,oBACzD,kBAACmE,EAAA,EAAD,CAAMC,WAAS,EAACnC,UAAU,SAASoC,QAAQ,SAASC,WAAW,SAASC,QAAS,GAC7E,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAI7K,MAAOd,GAAQ2K,MAC9B,kBAACiB,GAAA,EAAD,CAAa9K,MAAOd,GAAQwK,OAAQqB,WAAS,GACzC,kBAACC,GAAA,EAAD,CAAYC,QAAQ,cAAc3L,EAAKkH,MACvC,kBAAC0E,GAAA,EAAD,CACI5G,GAAG,aACH6G,eACI,kBAACC,GAAA,EAAD,CAAgBzL,SAAS,SACrB,kBAACS,EAAA,EAAD,OAGRoG,KAAM,QACNzF,MAAOxB,KAAKuB,MAAMiJ,SAAS9E,MAC3BvB,OAAUnE,KAAKuB,MAAMiJ,SAAS9E,MAC9BhE,SAAU1B,KAAKmB,iBAI3B,kBAAC6J,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAI7K,MAAOd,GAAQ2K,MAC9B,kBAACiB,GAAA,EAAD,CAAa9K,MAAOd,GAAQwK,OAAQqB,WAAS,GACzC,kBAACC,GAAA,EAAD,CAAYC,QAAQ,iBAAiB3L,EAAK4F,SAC1C,kBAACgG,GAAA,EAAD,CACI5G,GAAG,gBACH6G,eACI,kBAACC,GAAA,EAAD,CAAgBzL,SAAS,SACrB,kBAAC0L,GAAA,EAAD,OAGR7E,KAAM,UACNzF,MAAOxB,KAAKuB,MAAMiJ,SAAS7E,QAC3BxB,OAAUnE,KAAKuB,MAAMiJ,SAAS7E,QAC9BjE,SAAU1B,KAAKmB,iBAI3B,kBAAC6J,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAI7K,MAAOd,GAAQ2K,MAC9B,kBAACiB,GAAA,EAAD,CAAa9K,MAAOd,GAAQwK,OAAQqB,WAAS,GACzC,kBAACC,GAAA,EAAD,CAAYC,QAAQ,cAAc3L,EAAK0G,MACvC,kBAACkF,GAAA,EAAD,CACI5G,GAAG,aACH6G,eACI,kBAACC,GAAA,EAAD,CAAgBzL,SAAS,SACrB,kBAAC2L,GAAA,EAAD,OAGRC,UAAU,EACVxK,MAAOxB,KAAKuB,MAAMiJ,SAAS/D,SAIvC,kBAACuE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAI7K,MAAOd,GAAQ2K,MAC9B,kBAACiB,GAAA,EAAD,CAAa9K,MAAOd,GAAQyK,YAAaoB,WAAS,GAC9C,kBAACC,GAAA,EAAD,CAAY1G,GAAG,qBAAqBhF,EAAKoH,aACzC,kBAAC8E,GAAA,EAAD,CACIC,QAAQ,oBACRnH,GAAG,oBACH6G,eACI,kBAACC,GAAA,EAAD,CAAgBzL,SAAS,SACrB,kBAAC2L,GAAA,EAAD,OAGR9E,KAAM,OACNzF,MAAOxB,KAAKuB,MAAMiJ,SAAS/D,KAC3BtC,OAAUnE,KAAKuB,MAAMiJ,SAAS/D,KAC9B/E,SAAU1B,KAAKmB,cAEf,kBAACgL,GAAA,EAAD,CAAU3K,MAAM,IACZ,4BAAKzB,EAAKqM,OAEd,kBAACD,GAAA,EAAD,CAAU3K,MAAO,SAAUzB,EAAKsH,OAChC,kBAAC8E,GAAA,EAAD,CAAU3K,MAAO,QAASzB,EAAKuH,MAC/B,kBAAC6E,GAAA,EAAD,CAAU3K,MAAO,gBAAiBzB,EAAKwH,iBAInD,kBAACyD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAI7K,MAAOd,GAAQ2K,MAC9B,kBAACR,EAAA,EAAD,CAAQtJ,QAAQ,YAAYC,MAAOd,GAAQwK,OAAQJ,QAASc,EACxDwB,UAAWrM,KAAKuB,MAAMkJ,QAAU,kBAAC6B,GAAA,EAAD,MAAwB,kBAACC,GAAA,EAAD,OAEvDvM,KAAKuB,MAAMkJ,QAAU1K,EAAKyM,KAAOzM,EAAKkK,QAE3C,kBAACH,EAAA,EAAD,CAAQtJ,QAAQ,YAAYI,MAAM,UAAUH,MAAOd,GAAQwK,OAAQ1D,KAAM,SAAU4F,UAAW,kBAACI,GAAA,EAAD,OACzF1M,EAAK2M,a,GA/HX5L,aCCR6L,G,uKAnBD,IAAD,EACoD3M,KAAKC,MAAvDF,EADF,EACEA,KAAMsE,EADR,EACQA,KAAMuG,EADd,EACcA,aAAcC,EAD5B,EAC4BA,qBAEjC,OACI,yBAAK3K,UAAW,uBACZ,kBAAC,WAAD,CAAU0M,YAAY,UAAUC,aAAa,WAAWC,oBAAqB,IAAMC,qBAAsB,IAAMC,WAAW,GACtH,yBAAK9M,UAAW,qBACZ,4BAAKH,EAAKkN,cACV,yBAAKC,IAAK7I,EAAKuB,YAAkC,KAApBvB,EAAKuB,WAAoBvB,EAAKuB,WAAa,0BACnEuH,IAAI,OAAOjN,UAAU,oBAC1B,yBAAKA,UAAW,kBAAmBmE,EAAKqB,OACxC,kBAAC,GAAD,CAAU3F,KAAMA,EAAMsE,KAAMA,EAAMuG,aAAcA,EAAcC,qBAAsBA,W,GAbrF/J,aCMjBnB,I,OAAU,CACZoB,KAAM,CACFlB,SAAU,GAEduN,OAAQ,CACJjD,OAAQ,EACRkD,WAAY,KAEhBC,UAAW,CACPC,QAAS,YAmSFC,G,kDA7RX,WAAYvN,GAAQ,IAAD,8BACf,cAAMA,IAeVwN,QAAU,WACN,OAAOC,KAAKC,MAAM,KAAAD,KAAKE,UAA4B,KAjBpC,EAoBnBC,YAAc,WACV,OAAOH,KAAKC,MAAM,KAAAD,KAAKE,UAA4B,KArBpC,EAwBnBE,gBAAkB,SAAC/I,EAAIS,GACnB,EAAKlE,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IACIkG,OAAQhJ,EACRiJ,UAAWxI,EACXyI,YAAY,QA7BL,EAkCnBhF,YAAc,WACV,EAAK3H,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IACIkG,OAAQ,KACRC,UAAW,KACXC,YAAY,QAvCL,EA4CnBC,mBAAqB,SAACnJ,EAAIS,GACtB,EAAKlE,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IACIkG,OAAQhJ,EACRiJ,UAAWxI,EACX2I,aAAa,eAAK,EAAKlO,MAAMS,MAAM8E,SAG3C,EAAKvF,MAAMmO,kBApDI,EAuDnBvD,qBAAuB,WACnB,EAAKvJ,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IACIkG,OAAQ,KACRC,UAAW,KACXG,aAAc,QAGtB,EAAKlO,MAAMmO,kBA/DI,EAkEnBrH,iBAAmB,WACflC,EAAkBC,WAAW,EAAKvD,MAAMyM,WAAWtK,MAAK,SAAAW,GACjDA,EAAKO,SACJ,EAAKqE,cACL,EAAKhJ,MAAM2H,cACX,EAAKtG,UAAS,SAACuG,GACX,IAAIwG,EAAQ,EAAK9M,MAAM8M,MACnBC,EAAS,EAAK/M,MAAM+M,OAIxB,GAHGD,GAAS,EAAKpO,MAAMS,MAAMoD,SACzBuK,EAAQ,EAAKpO,MAAMS,MAAMoD,OAAS,GAEnCuK,IAAUC,EAAQ,CACjB,IAAIC,EAAOD,EAAS,EACpBA,EAASC,GAAQ,EAAIA,EAAO,EAEhC,OAAO,2BAAI1G,GAAX,IAAsB2G,OAAQ,EAAKvO,MAAMS,MAAMoD,OAAS,EAAGwK,SAAQD,aAEvEtG,IAAMC,QAAQ,EAAKzG,MAAMxB,KAAKwI,0BAEnCrE,OAAM,SAAAC,GACL4D,IAAM5D,MAAMA,EAAMF,aAtFP,EA0FnB4C,mBAAqB,SAACxC,GACdA,EAAKqB,OAAUrB,EAAKsB,SAAYtB,EAAKoC,KAGrC5B,EAAkBK,WAAW,QAAS,EAAK3D,MAAMyM,UAAW3J,GAAOX,MAAK,SAAAW,GACjEA,EAAKJ,SACJ,EAAKhE,MAAM2H,cACXG,IAAMC,QAAQ,EAAKzG,MAAMxB,KAAKkI,oBAE9BF,IAAM5D,MAAM,EAAK5C,MAAMxB,KAAK+G,oBAEjC5C,OAAM,SAAAC,GACL4D,IAAM5D,MAAMA,EAAMF,YAVtB8D,IAAM5D,MAAM,EAAK5C,MAAMxB,KAAK6G,wBA5FjB,EA2GnB6H,cAAgB,WAAO,IAAD,EACmB,EAAKlN,MAArC+M,EADa,EACbA,OAAQD,EADK,EACLA,MAAeK,GADV,EACEC,OADF,EACUD,OACxBH,EAAOD,EAAS,EAGpB,IAFS,EACTI,GAAQ,EACLH,GAAQ,EAAE,CACT,IAAIK,EAAa,GAAKP,EAAQC,GAE9BD,GAAS,EACK,KAFdC,EAASC,EAAOK,GAGZF,GAAQ,EACHJ,EAAS,IACdA,EAAS,QAGbA,EAAS,EACTD,EAAQ,EACRK,GAAQ,EAGZ,EAAKpN,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IAAsByG,SAAQD,QAAOM,QAlBhC,EAkBwCD,cAhIlC,EAoInBG,UAAY,WAAO,IAAD,EAC+B,EAAKtN,MAA7C+M,EADS,EACTA,OAAQD,EADC,EACDA,MAAOG,EADN,EACMA,OAAQG,EADd,EACcA,OACxBJ,GAFU,EACsBG,MACzBJ,EAAS,GAEpB,IADQ,EACLC,EAAOC,EACNF,EAASC,EACTF,GAAS,MACP,CACF,IAAIS,EAAQR,EAAS,EAClBQ,GAASN,IACRF,EAASQ,EACTT,EAAQG,GAIbH,GAASG,IACRG,GAAS,EACTN,EAAQG,GAGZ,EAAKlN,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IAAsByG,SAAQD,QAAOM,SAAQD,OAlBzC,QArIR,EAAKnN,MAAQ,CACTwM,OAAQ,KACRC,UAAW,KACXG,aAAc,GACdG,OAAQ,EACRD,MAAO,EACPG,OAAQvO,EAAMS,MAAMoD,OACpB6K,QAAQ,EACRD,OAAO,EACPT,YAAY,EACZlO,KAAM,EAAKE,MAAMF,MAZN,E,qDA6JT,IAAD,SACiBC,KAAKC,MAApBF,EADF,EACEA,KAAMW,EADR,EACQA,MADR,EAEmBV,KAAKuB,MAAtB+M,EAFF,EAEEA,OAAQD,EAFV,EAEUA,MAETU,EAAerO,EAAMsO,KAAI,SAAC1H,EAAM9B,GAClC,OACI,kBAAC,WAAD,CAAUyJ,IAAG,eAAU3H,EAAKvC,GAAf,YAAqBS,IAC3B8I,GAAU9I,GAASA,EAAQ6I,GAC1B,kBAACrD,EAAA,EAAD,CAAMK,MAAI,EAAC6D,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG9D,GAAI,IAChC,kBAAC,WAAD,CAAUsB,YAAY,UAAUC,aAAa,WAAWC,qBAAsB,EAAKe,YAC/Ed,sBAAuB,EAAKc,YAAab,WAAW,GACpD,yBAAK9M,UAAU,qBACX,kBAAC8K,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAMK,MAAI,EAAC+D,GAAI,IACX,wBAAIlP,UAAU,mBAAkB,2BAAIH,EAAKsP,gBACzC,kBAACrE,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAS,GACrB,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGpL,UAAW,kBACzB,wBAAIA,UAAW,aAAcoH,EAAK5B,OAClC,2BAAG,gCAAS3F,EAAKuP,MAAd,MAAH,IAAoChI,EAAKb,KAAzC,KACA,wBAAIvG,UAAU,kBACV,4BAAI,uBAAGA,UAAU,gBAAjB,IAAkCH,EAAK4F,QAAvC,KAAkD2B,EAAK3B,WAG/D,kBAACqF,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGpL,UAAW,SACzB,yBAAKgN,IAAK5F,EAAK1B,YAAkC,KAApB0B,EAAK1B,WAAoB0B,EAAK1B,WAAa,0BACnEuH,IAAI,OAAOjN,UAAU,iCAItC,kBAAC8K,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIpL,UAAW,sBAC1B,kBAAC8K,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAI8D,GAAI,GACnB,uBAAGlP,UAAU,WACT,8BAAO,EAAKuN,WACZ,kBAAC8B,EAAA,EAAD,CAAMC,SAAU,UAChB,kBAACD,EAAA,EAAD,CAAMC,SAAU,UAChB,kBAACD,EAAA,EAAD,CAAMC,SAAU,UAChB,kBAACC,EAAA,EAAD,CAAUD,SAAU,UACpB,kBAACE,EAAA,EAAD,CAAYF,SAAU,YAG9B,kBAACxE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAI8D,GAAI,GACnB,kBAACtF,EAAA,EAAD,CACItJ,QAAQ,YACRI,MAAM,YACNoJ,KAAK,QACLvJ,MAAOd,GAAQyN,OACflN,UAAW,kBACX6J,QAAS,kBAAM,EAAK+D,gBAAgBxG,EAAKvC,GAAIS,KAE7C,kBAACmK,GAAA,EAAD,CAAe3F,KAAK,WAExB,kBAACF,EAAA,EAAD,CACItJ,QAAQ,YACRI,MAAM,UACNoJ,KAAK,QACLvJ,MAAOd,GAAQyN,OACff,UAAW,kBAACI,GAAA,EAAD,MACX1C,QAAS,kBAAM,EAAKmE,mBAAmB5G,EAAKvC,GAAIS,KAE/CzF,EAAK2M,iBActD,OACI,6BACI,yBAAKjM,MAAOd,GAAQoB,KAAMb,UAAW,mBACjC,4BAAMF,KAAKC,MAAM2P,SAA6B7P,EAAK8P,UAAvB9P,EAAKyI,YACjC,6BACA,kBAACwC,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAS,GAClBpL,KAAKC,MAAM2P,SAiCV,kBAAC,GAAD,CACI7P,KAAMA,EACNsE,KAAMrE,KAAKuB,MAAM4M,aACjBvD,aAAc5K,KAAK6G,mBACnBgE,qBAAsB7K,KAAK6K,uBApC/B,kBAACG,EAAA,EAAD,CAAMC,WAAS,EAACxK,MAAOd,GAAQ2N,UAAWlC,QAAS,GAC9C2D,EACD,kBAAC/D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACX,2BAAOI,QAAQ,oBAAoBxL,UAAW,qBAC1C,kBAACS,EAAA,EAAD,CAAYC,MAAM,UAAUkP,aAAW,WAAWC,UAAU,OAChDhG,QAAS/J,KAAKyO,cACdzC,SAAUhM,KAAKuB,MAAMmN,OAE7B,kBAACsB,GAAA,EAAD,CAAkBR,SAAU,WAEhC,kBAAC7O,EAAA,EAAD,CAAYC,MAAM,UAAUkP,aAAW,WAAWC,UAAU,QACvD/P,KAAKuB,MAAM+M,OAAS,GAEzB,0BAAMpO,UAAW,sBAAjB,KACA,kBAACS,EAAA,EAAD,CAAYC,MAAM,UAAUkP,aAAW,WAAWC,UAAU,QACvD/P,KAAKuB,MAAM8M,OAEhB,0BAAMnO,UAAW,sBAAjB,KACA,kBAACS,EAAA,EAAD,CAAYC,MAAM,UAAUkP,aAAW,WAAWC,UAAU,QACvD/P,KAAKuB,MAAMiN,QAEhB,kBAAC7N,EAAA,EAAD,CAAYC,MAAM,UAAUkP,aAAW,OAAOC,UAAU,OAC5ChG,QAAS/J,KAAK6O,UACd7C,SAAUhM,KAAKuB,MAAMoN,QAE7B,kBAACsB,GAAA,EAAD,CAAmBT,SAAU,gBAgBzD,kBAAC,GAAD,CAAiBzP,KAAMA,EAAMiJ,KAAMhJ,KAAKuB,MAAM0M,WAAYhF,YAAajJ,KAAKiJ,YAAalC,iBAAkB/G,KAAK+G,wB,GAzRpGjG,aCPtBoP,GChBO,CACTC,SAAW,0BDeKA,SAEdxQ,GAAU,CACZoB,KAAM,CACFlB,SAAU,GAEduQ,MAAO,CACH7C,QAAS,GACT8C,UAAW,SACXzP,MAAO,uBAEXuJ,OAAQ,CACJA,OAAQ,IAIVmG,G,kDAEF,WAAYrQ,GAAQ,IAAD,8BACf,cAAMA,IAQVsQ,uBAAyB,WAAsB,IAArBC,EAAoB,wDACX,IAA5B,EAAKjP,MAAMb,MAAMoD,SAA4B,IAAZ0M,IAChCA,GAAW,EAAKlP,UAAS,SAAAuG,GAAS,kCAASA,GAAT,IAAoBnH,MAAO,QAC7D+P,IAAMC,IAAN,UAAaR,GAAb,WACKxM,MAAK,SAAAiN,IACiB,MAAfA,EAAIC,QAAqC,OAAnBD,EAAIE,aAAwBF,EAAItM,MAAQsM,EAAItM,KAAKP,OAAS,GAChF,EAAKxC,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IAAsBnH,MAAM,YAAKiQ,EAAItM,WAEzCQ,EAAkBT,aAAauM,EAAItM,MAAMX,MAAK,SAAAW,GACvCA,EAAKJ,SACJ8D,IAAMC,QAAQjI,EAAK+Q,2BAExB5M,OAAM,SAAAC,GACL4D,IAAM5D,MAAMA,EAAMF,aAGtB8D,IAAM5D,MAAMpE,EAAKgR,+BA1BlB,EAgCnBC,wBAA0B,WACtBnM,EAAkB1B,eAAeO,MAAK,SAAAW,GAC/BA,EAAKP,OAAS,EACb,EAAKxC,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IAAsBnH,MAAM,YAAK2D,QAGrC,EAAKkM,4BAEVrM,OAAM,SAAAC,GACL4D,IAAM5D,MAAMA,EAAMF,SAClB,EAAKsM,6BA3CM,EAmDnBpP,aAAe,SAACC,GACZ,IAAM0N,EAAQ1N,EAAMsJ,OAAOuG,QAC3B,EAAK3P,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IAAsBqJ,UAAWpC,QAtDtB,EA0DnBV,eAAiB,WACb,EAAK9M,UAAS,SAACuG,GACX,OAAO,2BAAIA,GAAX,IAAsB+H,UAAW,EAAKrO,MAAMqO,eA5DjC,EAgEnBuB,YAAc,WACV,EAAKZ,wBAAuB,IA/D5B,EAAKhP,MAAQ,CACT2P,WAAW,EACXxQ,MAAO,GACPkP,UAAU,GALC,E,gEAgDf5P,KAAKgR,4B,+BAsBL,OACI,yBAAK9Q,UAAS,oBAAuBO,MAAOd,GAAQoB,MAChD,kBAACiK,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAS,GACrB,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACX,wBAAIpL,UAAW,iBAAkBH,EAAKqR,qBAExCpR,KAAKuB,MAAMb,MAAMoD,OAAS,EACvB9D,KAAKuB,MAAM2P,UAOR,kBAAClG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACX,kBAAC+F,EAAA,EAAD,CAAO5Q,MAAOd,GAAQyQ,OAClB,kBAAC,GAAD,CACIrQ,KAAMA,EACNW,MAAOV,KAAKuB,MAAMb,MAClBkP,SAAU5P,KAAKuB,MAAMqO,SACrBxB,eAAgBpO,KAAKoO,eACrBxG,YAAa5H,KAAKgR,4BAb9B,kBAAChG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACX,kBAAC,WAAD,CAAUsB,YAAY,SAASC,aAAa,UAAUC,oBAAqB,IAAMC,qBAAsB,IAAMC,WAAW,GACpH,kBAAC,EAAD,CAAgBjN,KAAMA,EAAMW,MAAOV,KAAKuB,MAAMb,MAAOkH,YAAa5H,KAAKgR,4BAgBnF,kBAAChG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACX,yBAAKpL,UAAW,qBACZ,6BACI,kBAAC,IAAD,CAAQuG,KAAK,OAAO7F,MAAM,UAAU0Q,OAAQ,IAAKtQ,MAAO,MACxD,8BAAOjB,EAAKwR,iBAKzBvR,KAAKuB,MAAMqO,UACV,kBAAC5E,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACX,kBAACN,EAAA,EAAD,CAAMC,WAAS,EAACnC,UAAU,MAAMoC,QAAQ,aAAaC,WAAW,SAASjL,UAAW,qBAChF,kBAACsR,EAAA,EAAD,CACIC,QACI,kBAACC,EAAA,EAAD,CACIT,QAASjR,KAAKuB,MAAM2P,UACpBxP,SAAU1B,KAAKmB,aACfP,MAAM,YAGdgB,MAAO7B,EAAK4R,OAEhB,kBAAC7H,EAAA,EAAD,CAAQtJ,QAAQ,WAAWwJ,KAAK,QAAQvJ,MAAOd,GAAQwK,OAAQJ,QAAS/J,KAAKmR,aAC1E,kBAACS,EAAA,EAAD,CAAYpC,SAAU,UADzB,IACqCzP,EAAK8R,8B,GAzHpD/Q,aAoIPsB,YAAOkO","file":"static/js/5.912a407f.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {AppBar, Toolbar, Typography, IconButton} from '@material-ui/core'\nimport {AccountCircle, ContactsTwoTone} from '@material-ui/icons'\n\nconst classes = {\n    title: {\n        flexGrow: 1,\n    },\n}\n\nclass Header extends Component {\n\n    render() {\n        const {lang} = this.props\n\n        return (\n            <div className={\"header\"}>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <ContactsTwoTone />&nbsp;\n                        <Typography variant=\"h6\" style={classes.title}>\n                            {lang.users}\n                        </Typography>\n                        <div>\n                            <IconButton color=\"inherit\" >\n                                <AccountCircle />\n                            </IconButton>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        )\n    }\n}\n\nexport default Header","import React, {Component} from 'react'\nimport {BottomNavigation, BottomNavigationAction} from '@material-ui/core'\nimport {PhoneIphone, LocationOn, Business} from '@material-ui/icons/'\n\nconst classes = {\n    root: {\n        width: 500,\n        borderRadius: 4,\n    },\n}\n\nclass Footer extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {value: \"\"}\n    }\n\n    handleChange = (event, newValue) => {\n        this.setState(() => {\n            return {...this.state, value: newValue}\n        })\n    }\n\n    render() {\n        const {lang} = this.props\n\n        return (\n            <footer className={\"main-footer\"}>\n                <div className={\"footer-content\"}>\n                    <BottomNavigation value={this.state.value} onChange={this.handleChange} style={classes.root}>\n                        <BottomNavigationAction label=\"Company\" value={lang.company} icon={<Business />} />\n                        <BottomNavigationAction label=\"Phone\" value={lang.phone} icon={<PhoneIphone />} />\n                        <BottomNavigationAction label=\"Address\" value={lang.addres} icon={<LocationOn />} />\n                    </BottomNavigation>\n                </div>\n            </footer>\n        )\n    }\n}\n\nexport default Footer","import React,{Component} from 'react'\nimport Header from '../../components/Layout/Header'\nimport Footer from '../../components/Layout/Footer'\n\n// languages\nimport lang from '../../lang/en/en.json'\n\nconst Layout = (ChildComponent) =>\n    class LayoutContent extends Component {\n        render() {\n            const { ...rest} = this.props\n            return (\n                <>\n                    <Header lang={lang}/>\n                    <ChildComponent\n                        {...rest}\n                    />\n                    <Footer lang={lang}/>\n                </>\n            )\n        }\n    }\n\nexport default Layout","import app from 'firebase/app'\nimport 'firebase/database'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyARUoD2_fu_oUiRPBQQcmi2riCC3mTqD0o\",\n    authDomain: \"users-4eb94.firebaseapp.com\",\n    databaseURL: \"https://users-4eb94.firebaseio.com\",\n    projectId: \"users-4eb94\",\n    storageBucket: \"users-4eb94.appspot.com\",\n    messagingSenderId: \"866679448429\",\n    appId: \"1:866679448429:web:fc3b6a2da5b93fdc6d7064\"\n}\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(firebaseConfig)\n        this.database = app.database()\n    }\n}\n\nlet FB = new Firebase()\n\nexport default FB","import Firebase from './Firebase'\n\n/* Get All Users Data  */ /* (public) */\nconst getUsersData = () => {\n    return new Promise(function(resolve, reject) {\n        Firebase.database.ref(`users`).once('value').then(function(snapshot) {\n            const results = snapshot.val() || []\n            if(results.length !== 0){\n                resolve(results)\n            }else if(Object.keys(results).length === 0){\n                reject({message: 'Database error. Objects `Users results` not found!'})\n            }\n        }).catch(error=>{\n            reject({message: `Database error. 'Users results data! ${error.message}`})\n        })\n    })\n}\n\n/* Set Users Data From Github Api */ /* (public) */\nconst setUsersData = (data) => {\n    return new Promise(function(resolve, reject) {\n        Firebase.database.ref(`users/`).set({\n            ...data\n        },function(error) {\n            if (error) {\n                reject({message: `Database error. 'Add Users' data! ${error.message}`})\n            } else {\n                resolve({message: true})\n            }\n        }).catch(error=>{\n            reject({message: `Database error. 'Add Users' data! ${error.message}`})\n        })\n    })\n}\n\n/* Remove User By Id */ /* (public) */\nconst removeUser = (id) => {\n    return new Promise(function(resolve, reject) {\n        Firebase.database.ref(`/users`).child(id).remove().then(function() {\n            processData().then(data => {\n                if(data.result){\n                    resolve({result: true})\n                }else {\n                    reject({message: `Database error. 'Process Data Users' data!`})\n                }\n            }).catch(error => {\n                reject(error)\n            })\n        }).catch(error => {\n            reject(error)\n        })\n    })\n}\n\n/* Update data */ /* (public) */\nconst updateData = (table, id, data) => {\n    return new Promise(function(resolve, reject) {\n        Firebase.database.ref(table).child(id).update(data,function (error) {\n            if(error){\n                reject({message: `Database error. '${table}' data! ${error.message}`})\n            }else {\n                resolve({message: true})\n            }\n        }).catch(error => {\n            reject({message: `Database error. '${table}' data! ${error.message}`})\n        })\n    })\n}\n\n/* Add New Data  */ /* (public) */\nconst addNewData = (table, id, data) => {\n    return new Promise(function(resolve, reject) {\n        Firebase.database.ref(`${table}/${id}`).set({\n            ...data\n        },function(error) {\n            if (error) {\n                reject({message: `Database error. '${table} Add' data! ${error.message}`})\n            } else {\n                resolve({message: true})\n            }\n        }).catch(error=>{\n            reject({message: `Database error. '${table}' data! ${error.message}`})\n        })\n    })\n}\n\n/* Check data and remove empty cells */ /* (static) */\nconst processData = () => {\n    return new Promise(function(resolve, reject) {\n        getUsersData().then(data => {\n            const processArray = data.filter(function (el) {\n                return el !== undefined\n            })\n            setUsersData(processArray).then(data=>{\n                if(data.message){\n                    resolve({result: true})\n                }else {\n                    reject({message: `Database error. 'Process Data Users' data!`})\n                }\n            }).catch(error => {\n                reject(error)\n            })\n        }).catch(error => {\n            reject(error)\n        })\n    })\n}\n\nconst FirebaseFunctions = {\n    getUsersData, // get users data from firebase db\n    setUsersData, // set users data from github api to firebase db\n    removeUser, // remove user by id from firebase db\n    updateData, // update data from firebase db\n    addNewData, // add new data in firebase db\n}\n\nexport default FirebaseFunctions","import React, {Component} from 'react'\nimport MaterialTable from 'material-table'\nimport FirebaseFunctions from \"../../Firebase/FirebaseFunctions\"\nimport {toast} from \"react-toastify\"\n\nclass UsersListTable extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            users: {\n                columns: [\n                    {title: this.props.lang.name, field: 'login'},\n                    {title: this.props.lang.node_id, field: 'node_id'},\n                    {title: this.props.lang.type, field: 'type'},\n                    {\n                        title: this.props.lang.change_type,\n                        field: 'type',\n                        lookup: {\n                            \"Admin\": this.props.lang.admin,\n                            \"User\": this.props.lang.user,\n                            \"Organization\": this.props.lang.organization\n                        },\n                    },\n                ],\n                data: [...this.props.users],\n            }\n        }\n    }\n\n    handleAddNewUserData = (index, data) => {\n        const {lang} = this.props\n        const userAddData = {\n            login: \"\",\n            id: 0,\n            node_id: \"MDQ6VXNlcjE=\",\n            avatar_url: \"\",\n            gravatar_id: \"\",\n            url: \"\",\n            html_url: \"\",\n            followers_url: \"\",\n            following_url: \"\",\n            gists_url: \"\",\n            starred_url: \"\",\n            subscriptions_url: \"\",\n            organizations_url: \"\",\n            repos_url: \"\",\n            events_url: \"\",\n            received_events_url: \"\",\n            type: \"User\",\n            site_admin: false\n        }\n        return new Promise(function(resolve, reject) {\n            if(!data.login || !data.node_id || !data.type){\n                reject({message: lang.error_edit_empty_data})\n            }else {\n                userAddData.id = index\n                userAddData.login = data.login\n                userAddData.node_id = data.node_id\n                userAddData.type = data.type\n                FirebaseFunctions.addNewData(\"users\", index, userAddData).then(data => {\n                    if(data.message){\n                        resolve({result: true})\n                    }else {\n                        reject({message: lang.error_add_new_data})\n                    }\n                }).catch(error => {\n                    reject({message: error.message})\n                })\n            }\n        })\n    }\n\n    handleEditUserData = (index, data) => {\n        const {lang} = this.props\n        return new Promise(function(resolve, reject) {\n            if(!data.login || !data.node_id || !data.type){\n                reject({message: lang.error_edit_empty_data})\n            }else {\n                FirebaseFunctions.updateData(\"users\", index, data ).then(data => {\n                    if(data.message){\n                        resolve({result: true})\n                    }else {\n                        reject({message: lang.error_edit_data})\n                    }\n                }).catch(error => {\n                    reject({message: error.message})\n                })\n            }\n        })\n    }\n\n    handleDeleteUser = (index) => {\n        return new Promise(function(resolve, reject) {\n            FirebaseFunctions.removeUser(index).then(data => {\n                if(data.result){\n                    resolve({result: true})\n                }\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    }\n\n    render() {\n        const {lang} = this.props\n\n        const configs =\n            {\n                onRowAdd: (newData) =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            const index = this.state.users.data.length\n                            this.handleAddNewUserData(index, newData).then(data => {\n                                if(data.result){\n                                    resolve()\n                                    this.props.refreshData()\n                                    this.setState((prevState) => {\n                                        const data = [...prevState.users.data]\n                                        data.push(newData)\n                                        return {...prevState, users: {\n                                                ...prevState.users, data}\n                                        }\n                                    })\n                                    toast.success(lang.success_edit_data)\n                                }\n                            }).catch(error => {\n                                reject()\n                                toast.error(error.message)\n                            })\n                        }, 600)\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            const index = this.state.users.data.indexOf(oldData)\n                            this.handleEditUserData(index, newData).then(data => {\n                                if(data.result){\n                                    resolve()\n                                    this.props.refreshData()\n                                    if (oldData) {\n                                        this.setState((prevState) => {\n                                            const data = [...prevState.users.data]\n                                            data[data.indexOf(oldData)] = newData\n                                            return {...prevState, users: {\n                                                    ...prevState.users, data}\n                                            }\n                                        })\n                                    }\n                                    toast.success(lang.success_edit_data)\n                                }\n                            }).catch(error => {\n                                reject()\n                                toast.error(error.message)\n                            })\n                        }, 600)\n                    }),\n                onRowDelete: (oldData) =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            const index = this.state.users.data.indexOf(oldData)\n                            this.handleDeleteUser(index).then(data => {\n                                if(data.result){\n                                    resolve()\n                                    this.props.refreshData()\n                                    this.setState((prevState) => {\n                                        const data = [...prevState.users.data]\n                                        data.splice(data.indexOf(oldData), 1)\n                                        return {...prevState, users: {\n                                                ...prevState.users, data}\n                                        }\n                                    })\n                                    toast.success(lang.success_user_deleted)\n                                }\n                            }).catch(error => {\n                                reject()\n                                toast.error(error.message)\n                            })\n                        }, 600)\n                    }),\n            }\n\n        return (\n            <MaterialTable\n                title={lang.users_list}\n                columns={this.state.users.columns}\n                data={this.state.users.data}\n                editable={configs}\n            />\n        )\n    }\n}\n\nexport default UsersListTable","import React, {Component} from 'react'\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide} from '@material-ui/core'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nclass DeleteUserModal extends Component {\n\n    render() {\n         const {lang, open, handleClose, handleDeleteUser} = this.props\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={handleClose}\n                    aria-labelledby=\"user-delete-dialog-title\"\n                    aria-describedby=\"user-delete-dialog-description\"\n                >\n                    <DialogTitle id=\"user-delete-dialog-title\">{lang.delete_user}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"user-delete-dialog-description\">\n                            {lang.delete_user_question}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} variant=\"outlined\" size=\"small\">\n                            {lang.cancel}\n                        </Button>\n                        <Button onClick={handleDeleteUser} variant=\"outlined\" color=\"secondary\" size=\"small\">\n                            {lang.delete}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default DeleteUserModal","import React, {Component} from 'react'\nimport {Input, InputLabel, InputAdornment, FormControl, Grid, Button, MenuItem, Select} from '@material-ui/core'\nimport {AccountCircle, Fingerprint, Ballot, Edit, BackspaceOutlined, CancelOutlined} from '@material-ui/icons'\n\nconst classes = {\n    root: {\n        width: 330,\n        '& .MuiTextFieldRoot': {\n            margin: 8,\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: 8,\n        minWidth: 120,\n    },\n    margin: {\n        margin: 8,\n    },\n    w100: {\n        width: '100%',\n    },\n}\n\nclass EditForm extends Component {\n\n    state = {\n        userData: {...this.props.data},\n        editBtn: false,\n    }\n\n    handleChange = (event) => {\n        const name = event.target.name\n        const value = event.target.value\n\n        switch(name) {\n            case \"login\":\n                this.setState((prevState) => {\n                    return {...prevState, userData: {...this.state.userData, login: value}}\n                })\n                break\n            case \"node-id\":\n                this.setState((prevState) => {\n                    return {...prevState, userData: {...this.state.userData, node_id: value}}\n                })\n                break\n            case \"type\":\n                this.setState((prevState) => {\n                    return {...prevState, userData: {...this.state.userData, type: value}}\n                })\n                break\n            default:\n                this.setState((prevState) => {\n                    return {...prevState}\n                })\n        }\n    }\n\n    handleEditUserData = (event) => {\n        event.preventDefault()\n        this.setState(prevState => ({...prevState, editBtn: true}))\n        this.props.editUserData(this.state.userData)\n    }\n\n    render() {\n        const {lang, handleCancelEditUser} = this.props\n\n        return (\n            <form style={classes.root} autoComplete=\"off\" onSubmit={this.handleEditUserData}>\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3}>\n                    <Grid item xs={12} style={classes.w100}>\n                        <FormControl style={classes.margin} fullWidth>\n                            <InputLabel htmlFor=\"input-name\">{lang.name}</InputLabel>\n                            <Input\n                                id=\"input-name\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <AccountCircle />\n                                    </InputAdornment>\n                                }\n                                name={\"login\"}\n                                value={this.state.userData.login}\n                                error={!!!this.state.userData.login}\n                                onChange={this.handleChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} style={classes.w100}>\n                        <FormControl style={classes.margin} fullWidth>\n                            <InputLabel htmlFor=\"input-node-id\">{lang.node_id}</InputLabel>\n                            <Input\n                                id=\"input-node-id\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <Fingerprint />\n                                    </InputAdornment>\n                                }\n                                name={\"node-id\"}\n                                value={this.state.userData.node_id}\n                                error={!!!this.state.userData.node_id}\n                                onChange={this.handleChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} style={classes.w100}>\n                        <FormControl style={classes.margin} fullWidth>\n                            <InputLabel htmlFor=\"input-type\">{lang.type}</InputLabel>\n                            <Input\n                                id=\"input-type\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <Ballot />\n                                    </InputAdornment>\n                                }\n                                disabled={true}\n                                value={this.state.userData.type}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} style={classes.w100}>\n                        <FormControl style={classes.formControl} fullWidth>\n                            <InputLabel id=\"input-change-type\">{lang.change_type}</InputLabel>\n                            <Select\n                                labelId=\"input-change-type\"\n                                id=\"input-change-type\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <Ballot />\n                                    </InputAdornment>\n                                }\n                                name={\"type\"}\n                                value={this.state.userData.type}\n                                error={!!!this.state.userData.type}\n                                onChange={this.handleChange}\n                            >\n                                <MenuItem value=\"\">\n                                    <em>{lang.none}</em>\n                                </MenuItem>\n                                <MenuItem value={\"Admin\"}>{lang.admin}</MenuItem>\n                                <MenuItem value={\"User\"}>{lang.user}</MenuItem>\n                                <MenuItem value={\"Organization\"}>{lang.organization}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} style={classes.w100}>\n                        <Button variant=\"contained\" style={classes.margin} onClick={handleCancelEditUser}\n                            startIcon={this.state.editBtn ? <BackspaceOutlined /> : <CancelOutlined />}\n                        >\n                            {this.state.editBtn ? lang.back : lang.cancel}\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" style={classes.margin} type={\"submit\"} startIcon={<Edit />}>\n                            {lang.edit}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        )\n    }\n}\n\nexport default EditForm","import React, {Component} from \"react\"\nimport {Animated} from \"react-animated-css\"\nimport EditForm from \"./EditForm\"\n\nclass UserEdit extends Component {\n\n    render() {\n        const {lang, data, editUserData, handleCancelEditUser} = this.props\n\n        return (\n            <div className={\"user-edit-container\"}>\n                <Animated animationIn=\"flipInY\" animationOut=\"flipOutY\" animationInDuration={1000} animationOutDuration={1000} isVisible={true}>\n                    <div className={\"user-edit-section\"}>\n                        <h1>{lang.edit_profile}</h1>\n                        <img src={data.avatar_url && data.avatar_url !== \"\" ? data.avatar_url : \"/images/empty_image.png\"}\n                             alt=\"user\" className=\"user-edit-image\"/>\n                        <div className={\"user-edit-name\"}>{data.login}</div>\n                        <EditForm lang={lang} data={data} editUserData={editUserData} handleCancelEditUser={handleCancelEditUser}/>\n                    </div>\n                </Animated>\n            </div>\n        )\n    }\n}\n\nexport default UserEdit","import React, {Component, Fragment} from 'react'\nimport {Grid, Button, IconButton} from '@material-ui/core'\nimport {Star, StarHalf, StarBorder, DeleteForever, Edit, ArrowLeftRounded, ArrowRightRounded} from '@material-ui/icons'\nimport {Animated} from \"react-animated-css\"\nimport DeleteUserModal from './DeleteUserModal'\nimport UserEdit from \"./UserEdit\"\nimport FirebaseFunctions from \"../../Firebase/FirebaseFunctions\"\nimport {toast} from \"react-toastify\"\nimport \"./UsersListCard.scss\"\n\nconst classes = {\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n        margin: 8,\n        fontWeight: 600,\n    },\n    paddingLR: {\n        padding: '0 15px',\n    },\n}\n\nclass UsersListCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userId: null,\n            userIndex: null,\n            editUserDate: {},\n            offset: 0,\n            limit: 6,\n            amount: props.users.length,\n            finish: false,\n            start: true,\n            modalState: false,\n            lang: this.props.lang,\n        }\n    }\n\n    getRate = () => {\n        return Math.floor(Math.random() * (2000 - +100)) + 100\n    }\n\n    getDuration = () => {\n        return Math.floor(Math.random() * (2000 - +500)) + 500\n    }\n\n    handleClickOpen = (id, index) => {\n        this.setState((prevState) => {\n            return {...prevState,\n                userId: id,\n                userIndex: index,\n                modalState: true\n            }\n        })\n    }\n\n    handleClose = () => {\n        this.setState((prevState) => {\n            return {...prevState,\n                userId: null,\n                userIndex: null,\n                modalState: false\n            }\n        })\n    }\n\n    handleOpenEditUser = (id, index) => {\n        this.setState((prevState) => {\n            return {...prevState,\n                userId: id,\n                userIndex: index,\n                editUserDate: {...this.props.users[index]},\n            }\n        })\n        this.props.handleEditUser()\n    }\n\n    handleCancelEditUser = () => {\n        this.setState((prevState) => {\n            return {...prevState,\n                userId: null,\n                userIndex: null,\n                editUserDate: {},\n            }\n        })\n        this.props.handleEditUser()\n    }\n\n    handleDeleteUser = () => {\n        FirebaseFunctions.removeUser(this.state.userIndex).then(data => {\n            if(data.result){\n                this.handleClose()\n                this.props.refreshData()\n                this.setState((prevState) => {\n                    let limit = this.state.limit\n                    let offset = this.state.offset\n                    if(limit >= this.props.users.length){\n                        limit = this.props.users.length - 1\n                    }\n                    if(limit === offset) {\n                        let temp = offset - 6\n                        offset = temp >= 0 ? temp : 0\n                    }\n                    return {...prevState, amount: this.props.users.length - 1, offset, limit}\n                })\n                toast.success(this.state.lang.success_user_deleted)\n            }\n        }).catch(error => {\n            toast.error(error.message)\n        })\n    }\n\n    handleEditUserData = (data) => {\n        if(!data.login || !data.node_id || !data.type){\n            toast.error(this.state.lang.error_edit_empty_data)\n        }else {\n            FirebaseFunctions.updateData(\"users\", this.state.userIndex, data ).then(data => {\n                if(data.message){\n                    this.props.refreshData()\n                    toast.success(this.state.lang.success_edit_data)\n                }else {\n                    toast.error(this.state.lang.error_edit_data)\n                }\n            }).catch(error => {\n                toast.error(error.message)\n            })\n        }\n    }\n\n    previousUsers = () => {\n        let {offset, limit, finish, start} = this.state\n        let temp = offset - 6\n        finish = false\n        start = false\n        if(temp >= 0){\n            let difference = 6 - (limit - offset)\n            offset = temp - difference\n            limit -= 6\n            if(offset === 0){\n                start = true\n            }else if(offset < 0){\n                offset = 0\n            }\n        }else {\n            offset = 0\n            limit = 6\n            start = true\n        }\n\n        this.setState((prevState) => {\n            return {...prevState, offset, limit, finish, start}\n        })\n    }\n\n    nextUsers = () => {\n        let {offset, limit, amount, finish, start} = this.state\n        let temp = offset + 6\n        start = false\n        if(temp < amount){\n            offset = temp\n            limit += 6\n        }else {\n            let check = offset + 1\n            if(check <= amount){\n                offset = check\n                limit = amount\n            }\n        }\n\n        if(limit >= amount){\n            finish = true\n            limit = amount\n        }\n\n        this.setState((prevState) => {\n            return {...prevState, offset, limit, finish, start}\n        })\n    }\n\n    render() {\n        const {lang, users} = this.props\n        const {offset, limit} = this.state\n\n        const usersListJsx = users.map((user, index) => {\n            return (\n                <Fragment key={`user-${user.id}-${index}`}>\n                    { (offset <= index && index < limit) &&\n                        <Grid item lg={4} md={6} sm={6} xs={12}>\n                            <Animated animationIn=\"flipInX\" animationOut=\"flipOutX\" animationInDuration={+this.getDuration}\n                                animationOutDuration={+this.getDuration} isVisible={true}>\n                                <div className=\"well profile_view\">\n                                    <Grid container>\n                                        <Grid item sm={12}>\n                                            <h4 className=\"brief text-left\"><i>{lang.personal_data}</i></h4>\n                                            <Grid container spacing={3}>\n                                                <Grid item xs={7} className={\"left text-left\"}>\n                                                    <h2 className={\"user-name\"}>{user.login}</h2>\n                                                    <p><strong>{lang.about}: </strong> {user.type} </p>\n                                                    <ul className=\"list-un-styled\">\n                                                        <li><i className=\"fa fa-phone\"/> {lang.node_id}: {user.node_id}</li>\n                                                    </ul>\n                                                </Grid>\n                                                <Grid item xs={5} className={\"right\"}>\n                                                    <img src={user.avatar_url && user.avatar_url !== \"\" ? user.avatar_url : \"/images/empty_image.png\"}\n                                                         alt=\"user\" className=\"img-circle img-responsive\" />\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item xs={12} className={\"bottom text-center\"}>\n                                            <Grid container>\n                                                <Grid item xs={12} sm={6}>\n                                                    <p className=\"ratings\">\n                                                        <span>{this.getRate()}</span>\n                                                        <Star fontSize={\"small\"}/>\n                                                        <Star fontSize={\"small\"}/>\n                                                        <Star fontSize={\"small\"}/>\n                                                        <StarHalf fontSize={\"small\"}/>\n                                                        <StarBorder fontSize={\"small\"}/>\n                                                    </p>\n                                                </Grid>\n                                                <Grid item xs={12} sm={6}>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"secondary\"\n                                                        size=\"small\"\n                                                        style={classes.button}\n                                                        className={\"user-delete-btn\"}\n                                                        onClick={() => this.handleClickOpen(user.id, index)}\n                                                    >\n                                                        <DeleteForever size=\"small\"/>\n                                                    </Button>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        size=\"small\"\n                                                        style={classes.button}\n                                                        startIcon={<Edit />}\n                                                        onClick={() => this.handleOpenEditUser(user.id, index)}\n                                                    >\n                                                        {lang.edit}\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </Animated>\n                        </Grid>\n                    }\n                </Fragment>\n            )\n        })\n\n        return (\n            <div>\n                <div style={classes.root} className={\"users-list-card\"}>\n                    <h2>{!this.props.editUser ? lang.users_list : lang.edit_user}</h2>\n                    <hr/>\n                    <Grid container spacing={3}>\n                        { !this.props.editUser ?\n                            <Grid container style={classes.paddingLR} spacing={3}>\n                                {usersListJsx}\n                                <Grid item xs={12}>\n                                    <label htmlFor=\"previous-next-btn\" className={\"previous-next-btn\"}>\n                                        <IconButton color=\"primary\" aria-label=\"previous\" component=\"span\"\n                                                    onClick={this.previousUsers}\n                                                    disabled={this.state.start}\n                                        >\n                                            <ArrowLeftRounded fontSize={\"large\"}/>\n                                        </IconButton>\n                                        <IconButton color=\"primary\" aria-label=\"previous\" component=\"span\">\n                                            {this.state.offset + 1}\n                                        </IconButton>\n                                        <span className={\"previous-next-drop\"}>-</span>\n                                        <IconButton color=\"primary\" aria-label=\"previous\" component=\"span\">\n                                            {this.state.limit}\n                                        </IconButton>\n                                        <span className={\"previous-next-drop\"}>/</span>\n                                        <IconButton color=\"primary\" aria-label=\"previous\" component=\"span\">\n                                            {this.state.amount}\n                                        </IconButton>\n                                        <IconButton color=\"primary\" aria-label=\"next\" component=\"span\"\n                                                    onClick={this.nextUsers}\n                                                    disabled={this.state.finish}\n                                        >\n                                            <ArrowRightRounded fontSize={\"large\"}/>\n                                        </IconButton>\n                                    </label>\n                                </Grid>\n                            </Grid>\n                        :\n                            /* User Edit part */\n                            <UserEdit\n                                lang={lang}\n                                data={this.state.editUserDate}\n                                editUserData={this.handleEditUserData}\n                                handleCancelEditUser={this.handleCancelEditUser}\n                            />\n                        }\n                    </Grid>\n                </div>\n                <DeleteUserModal lang={lang} open={this.state.modalState} handleClose={this.handleClose} handleDeleteUser={this.handleDeleteUser}/>\n            </div>\n        )\n    }\n}\n\nexport default UsersListCard","import React, {Component} from 'react'\nimport {Paper, Grid, Switch, FormControlLabel, Button} from '@material-ui/core'\nimport {RotateLeft} from '@material-ui/icons/'\nimport axios from 'axios'\nimport {Animated} from \"react-animated-css\"\nimport {toast} from 'react-toastify'\nimport Loader from 'react-loader-spinner'\nimport Layout from \"../hoc/layout/Layout\"\nimport UsersListTable from \"./Users/UsersListTable\"\nimport UsersListCard from \"./Users/UsersListCard\"\nimport FirebaseFunctions from \"../Firebase/FirebaseFunctions\"\nimport data from \"../constants\"\n\n// languages\nimport lang from '../lang/en/en.json'\n// User Api url\nconst apiUrl = data.usersUrl\n\nconst classes = {\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: 16,\n        textAlign: 'center',\n        color: 'rgba(0, 0, 0, 0.54)',\n    },\n    margin: {\n        margin: 8,\n    },\n}\n\nclass Welcome extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            tableType: false,\n            users: [],\n            editUser: false,\n        }\n    }\n\n    getUserDataFromMainApi = (restore = false) => {\n        if(this.state.users.length === 0 || restore === true){\n            restore && this.setState(prevState => ({...prevState, users: []}))\n            axios.get(`${apiUrl}/users`)\n                .then(res => {\n                    if((res.status === 200 || res.statusText === \"OK\") && res.data && res.data.length > 0){\n                        this.setState((prevState) => {\n                            return {...prevState, users: [...res.data]}\n                        })\n                        FirebaseFunctions.setUsersData(res.data).then(data => {\n                            if(data.message){\n                                toast.success(lang.success_firebase_added)\n                            }\n                        }).catch(error => {\n                            toast.error(error.message)\n                        })\n                    }else {\n                        toast.error(lang.error_server_unavailable)\n                    }\n                })\n        }\n    }\n\n    getUserDataFromFirebase = () => {\n        FirebaseFunctions.getUsersData().then(data => {\n            if(data.length > 0){\n                this.setState((prevState) => {\n                    return {...prevState, users: [...data]}\n                })\n            }else {\n                this.getUserDataFromMainApi()\n            }\n        }).catch(error => {\n            toast.error(error.message)\n            this.getUserDataFromMainApi()\n        })\n    }\n\n    componentDidMount(){\n        this.getUserDataFromFirebase()\n    }\n\n    handleChange = (event) => {\n        const check = event.target.checked\n        this.setState((prevState) => {\n            return {...prevState, tableType: check}\n        })\n    }\n\n    handleEditUser = () => {\n        this.setState((prevState) => {\n            return {...prevState, editUser: !this.state.editUser}\n        })\n    }\n\n    restoreData = () => {\n        this.getUserDataFromMainApi(true)\n    }\n\n    render() {\n\n        return (\n            <div className={`welcome-container`} style={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <h1 className={\"welcome-title\"}>{lang.welcome_users_page}</h1>\n                    </Grid>\n                    { this.state.users.length > 0 ?\n                        !this.state.tableType ?\n                            <Grid item xs={12}>\n                                <Animated animationIn=\"zoomIn\" animationOut=\"zoomOut\" animationInDuration={1000} animationOutDuration={1000} isVisible={true}>\n                                    <UsersListTable lang={lang} users={this.state.users} refreshData={this.getUserDataFromFirebase}/>\n                                </Animated>\n                            </Grid>\n                        :\n                            <Grid item xs={12}>\n                                <Paper style={classes.paper}>\n                                    <UsersListCard\n                                        lang={lang}\n                                        users={this.state.users}\n                                        editUser={this.state.editUser}\n                                        handleEditUser={this.handleEditUser}\n                                        refreshData={this.getUserDataFromFirebase}\n                                    />\n                                </Paper>\n                            </Grid>\n                    :\n                        <Grid item xs={12}>\n                            <div className={\"empty-data-loader\"}>\n                                <div>\n                                    <Loader type=\"Bars\" color=\"#1079f8\" height={100} width={100}/>\n                                    <span>{lang.wait_loader}</span>\n                                </div>\n                            </div>\n                        </Grid>\n                    }\n                    { !this.state.editUser &&\n                        <Grid item xs={12}>\n                            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" className={\"users-list-switch\"}>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={this.state.tableType}\n                                            onChange={this.handleChange}\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={lang.card}\n                                />\n                                <Button variant=\"outlined\" size=\"small\" style={classes.margin} onClick={this.restoreData}>\n                                   <RotateLeft fontSize={\"small\"}/> {lang.restore_default_data}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    }\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Layout(Welcome)","const data = {\n    usersUrl : 'https://api.github.com',\n}\n\nexport default data"],"sourceRoot":""}